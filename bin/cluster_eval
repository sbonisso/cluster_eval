#!/usr/bin/env ruby

require 'thor'
require 'cluster_eval'

class CLUSTER_EVAL_BIN < Thor
  
  method_option :cluster_file_a, :aliases => "-a", :desc => "cluster file A"
  method_option :cluster_file_b, :aliases => "-b", :desc => "cluster file B"
  method_option :type, :aliases => "-y", :desc => "type of index to compute"
  desc 'eval [options]', 'evaluate clusterings'
  def eval()
    clust_a_f = options["cluster_file_a"]
    clust_b_f = options["cluster_file_b"]
    index_type = options["type"]
    
    clust_a_h = {}
    IO.foreach(clust_a_f) do |line|
      ary = line.chomp.split("\t")
      clust_a_h[ary[0].to_i] = ary[1].to_i
    end
    clust_b_h = {}
    IO.foreach(clust_b_f) do |line|
      ary = line.chomp.split("\t")
      clust_b_h[ary[0].to_i] = ary[1].to_i
    end
    
    cm = ClusterEval::ConfusionMatrix.new(clust_a_h, clust_b_h)
    
    if index_type == "rand" then
      puts '%0.3f' % cm.get_rand_index
    elsif index_type == "jaccard" then
      puts '%0.3f' % cm.get_jaccard_index
    elsif index_type == "fm" then
      puts '%0.3f' % cm.get_fm_index
    elsif index_type == "all" then
      puts ['rand', 'jaccard', 'fm'].join("\t")
      puts ['%0.3f' % cm.get_rand_index, 
            '%0.3f' % cm.get_jaccard_index,
            '%0.3f' % cm.get_fm_index].join("\t")
    else
      raise 'invalid index type'
    end
  end
  
end
#
CLUSTER_EVAL_BIN.start(ARGV)
